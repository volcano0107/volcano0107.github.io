<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[在组件上使用v-model]]></title>
    <url>%2F2018%2F11%2F14%2F%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%8A%E4%BD%BF%E7%94%A8v-model%2F</url>
    <content type="text"><![CDATA[最近写了个select组件，添加了几个功能，如option过滤，设置默认值，添加change方法告知父组件等。然后，提交后被返工了 💔现在，重新审视自己的代码。发现最大的问题就是代码冗余：我并没有在父组件上使用v-model,所有的数据改变都是通过子组件change调用父组件方法，再去改变父组件的数据。如果有多个select，那就需要添加多个方法，接收每个select改变后的值，再改变父组件的数据。糟糕的代码就不展示了现在开始整理自己的思路～ 在input上使用v-model首先，我们需要了解的是，1&lt;input type="text" v-model="searchText"/&gt; 等价于1&lt;input type="text" :value="searchText" @input="searchText = $event.target.value"/&gt; 组件中 1&lt;test-input v-model="searchText"&gt;&lt;/test-input&gt; 等价于1&lt;test-input :value="searchText" @input="searchText = $event"&gt;&lt;/test-input&gt; 如果你的组件是这样的：12345678910111213&lt;template&gt; &lt;input type="text" v-model="searchText"/&gt;&lt;/template&gt;&lt;script&gt;export default &#123; name: 'TestInput', data () &#123; return &#123; searchText : '' &#125; &#125;&#125;&lt;/script&gt; 那么，使用如下代码并不会实现数据绑定。12345678910111213141516171819&lt;template&gt; &lt;div&gt; &lt;test-input v-model="inputValue"&gt;&lt;/test-input&gt; &#123;&#123; inputValue &#125;&#125; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import TestInput from '@/components/Input.vue'export default &#123; data () &#123; return &#123; inputValue: '初始写的值' &#125; &#125;, components: &#123; TestInput &#125;&#125;&lt;/script&gt; 接下来，我们尝试进行双向绑定 对组件进行修改：1&lt;input type="text" :value="searchText" @input="searchText = $event.target.value"/&gt; 划重点：将其 value 特性绑定到一个名叫 value 的 prop 上在其 input 事件被触发时，将新的值通过自定义的 input 事件抛出代码如下：123456789101112131415161718&lt;template&gt; &lt;div&gt; &lt;input type="text" :value="searchText" @input="$emit('input',$event.target.value)"/&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; props: ['value'], data () &#123; return &#123; searchText : '' &#125; &#125;&#125;&lt;/script&gt; 再次看一下调用组件的代码1&lt;test-input v-model="inputValue"&gt;&lt;/test-input&gt; 它相当于1&lt;test-input :value="inputValue" @input="inputValue = $event"&gt;&lt;/test-input&gt; 个人解释👇这样，input会把组件的inputValue作为它的value值，同时，当input元素发生输入改变事件时，会通知父组件修改其value值。这样就实现了双向绑定。 官方解释👇这里的 inputValue 的值将会传入这个名为 value 的 prop。同时当 &lt;test-input&gt; 触发一个 input 事件并附带一个新的值的时候，这个 inputValue 的属性将会被更新。 在checkbox上使用v-model一个组件上的 v-model 默认会利用名为 value的 prop和名为 input 的事件。但是像单选框、复选框等类型的输入控件可能会将 value特性用于不同的目的。model 选项可以用来避免这样的冲突： 组件代码：123456789101112131415161718192021&lt;template&gt; &lt;input type="checkbox" :checked="checked" @change="$emit('change',$event.target.checked)" /&gt;&lt;/template&gt;&lt;script&gt;export default &#123; model: &#123; prop: 'checked', event: 'change' &#125;, props: ['checked'], data () &#123; return &#123; checked: false &#125; &#125;&#125;&lt;/script&gt; 更多组件的特性还需要深入了解～fighting]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[key在vue中的使用]]></title>
    <url>%2F2018%2F11%2F09%2Fkey%E5%9C%A8vue%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[用key管理可复用的元素Vue 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。例如官网的栗子：12345678&lt;template v-if="loginType === 'username'"&gt; &lt;label&gt;Username&lt;/label&gt; &lt;input placeholder="Enter your username"&gt;&lt;/template&gt;&lt;template v-else&gt; &lt;label&gt;Email&lt;/label&gt; &lt;input placeholder="Enter your email address"&gt;&lt;/template&gt; 以上的代码，在切换不同的登录方式时，vue会复用input，只是替换了placeholder的值。如果我们不想input被复用，希望切换登录方式时，input是一个全新的input，可以使用key属性添加唯一标识。12345678&lt;template v-if="loginType === 'username'"&gt; &lt;label&gt;Username&lt;/label&gt; &lt;input placeholder="Enter your username" key="username-input"&gt;&lt;/template&gt;&lt;template v-else&gt; &lt;label&gt;Email&lt;/label&gt; &lt;input placeholder="Enter your email address" key="email-input"&gt;&lt;/template&gt; 在v-for中使用key一般情况下，使用v-for渲染列表时，我们会为每项提供一个唯一的key属性，以保证vue能跟踪每个节点的身份，从而复用和重新排序现有元素。2.2.0+的版本里，当在组件中使用 v-for 时，key现在是必须的例如：123&lt;div v-for="item in data" :key="item.id"&gt; &lt;!-- 内容 --&gt;&lt;/div&gt; 实际应用接着上一篇 element-ui-前端分页实现 说一下 key在循环中的用法我们在表格中增加一列123456&lt;el-table-column label="选择"&gt; &lt;template slot-scope="&#123;row&#125;"&gt; &lt;el-checkbox&gt;&lt;/el-checkbox&gt; &lt;/template&gt;&lt;/el-table-column&gt; 打开页面，如下所示（设置为20条每页，截图好看～）勾选第一页第一项数据，然后跳转到第二页，我们惊奇的发现，第二页的第一项处于选中状态，第三页同样。这是因为vue复用了checkbox如何才能使其正确显示呢？123&lt;template slot-scope="&#123;row&#125;"&gt; &lt;el-checkbox :key="row.id"&gt;&lt;/el-checkbox&gt;&lt;/template&gt; 修正后，数据正常显示。在此，要保证key的值是唯一的,如果没有id，可以使用其他字段，或者两个字段的拼接，如:1&lt;el-checkbox :key="row.name+row.idx"&gt;&lt;/el-checkbox&gt; 以上，仅为key应用的一小部分，更多的应用，希望在以后的工作学习中，细细体会。]]></content>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[echarts使用之关系图详细配置]]></title>
    <url>%2F2018%2F11%2F07%2Fecharts%E4%BD%BF%E7%94%A8%E4%B9%8B%E5%85%B3%E7%B3%BB%E5%9B%BE%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[近期使用echarts的关系图，繁多的配置项让人头疼。只能一直百度，但百度依旧让人摸不到头脑。因此，基于网上的一篇”人民的名义关系图谱”关系图和实际项目需求，整理以下配置。想配置什么，就查看更多，然后通过关键字 ctrl+f 查询一下吧～如果不能满足你的需求，就移步 echarts官网查看详细配置❤️希望每个人都可以少走一些弯路❤️ echarts版本3.8.5注：所有配置均在option.series下，其他配置本文暂不涉及 Q &amp; AQ: 关系图中data和links分别代表什么A: data是你的节点数据列表，links是节点关系数据列表。通俗来说，data里是一个个节点，links里说明节点之间的关系，也就是links里的每一个元素都是一条边（连接两个节点），由此构成关系图。 Q: 如何全局设置节点的属性？A: 直接设置series下：symbolSize（节点大小），itemStyle（节点样式） Q: 如何全局设置边的属性？A: 直接设置series下：lineStyle（边的样式） Q: 节点上的显示文字（节点标签）如何显示？A: 设置label的show属性为true即可 Q: 正常和高亮状态下，标签/样式不同，如何设置?A: 大多属性，如itemStyle/label/lineStyle/edgeLabel都有normal和emphasis两个状态，分别设置就可以。 Q: 如何设置某一节点的属性?A: data里是节点，每一个节点的基本属性大致包括 属性 含义 name 数据项名称 value 数据项的值 category 数据项所在类目的index，从0开始 symbol 该类目节点标记的图形，通过这个属性你可以设置节点显示的图标，可以是echarts提供的类型，如’circle’, ‘rect’，也可以是一个链接，或者相对地址，或者base64图片 symbolSize 节点显示图标的大小 itemStyle 节点样式 label 节点标签样式 一般来说，我们会把symbolSize的值设置成与value有关系的值，比如symbolSize = value * 2,具体还需要看实际需求 Q: 为什么我的关系图显示就像这样子，一团糟？A: 尝试一下设置series下的force属性123force: &#123; repusion: 1000 //节点间的斥力因子，默认是50&#125; 设置后效果图1234force: &#123; repusion: 1000, // 节点间的斥力因子，默认是50 edgeLength: [100,500] // 边的两个节点之间的距离,默认是[10,50]&#125; 设置后效果图如下，具体还需要根据实际需求修改值的配置 Q: 为什么我的关系图是直线型的？像这样A: 通过设置边的线条样式lineStyle下的curveness (边的曲度）实现曲边 结合以上图片，说明一下两个官方术语 label图形上的文本标签，就是关系图上人物的名字 edgeLabel关系标签（边标签），就是两个人物之间的关系，如母女，姐妹，下属 Q: 我有一个需求，点击某个按钮，要高亮某几条指定的关系线怎么办？A: 官网上有一个方法将指定的节点以及其所有邻接节点高亮1234567891011myChart.dispatchAction(&#123; type: 'focusNodeAdjacency', // 使用 seriesId 或 seriesIndex 或 seriesName 来定位 series. seriesId: 'xxx', seriesIndex: 0, seriesName: 'nnn', // 使用 dataIndex 来定位节点。 dataIndex: 12&#125;) 根据这个方法，在源码中新增一个方法，高亮指定的边（通过边在links数组所属的下标值） 123456789101112myFocusEdge: function (seriesModel, ecModel, api, payload) &#123; var data = this._model.getData(); var graph = data.graph; var my_edge = payload.edgeIndexs; // 数组 my_edge.forEach(function(edge_item)&#123; var edgeDataIndex = edge_item; var edge = graph.getEdgeByIndex(edgeDataIndex); if (edge) &#123; fadeInItem(edge, lineOpacityPath); &#125; &#125;)&#125; 注册：12345registerAction(&#123; type: 'myFocusEdge', event: 'myFocusEdge', update: 'series.graph:myFocusEdge'&#125;, function () &#123;&#125;); 如何调用？123456789myChart.dispatchAction(&#123; type: 'myFocusEdge', // 使用 seriesId 或 seriesIndex 或 seriesName 来定位 series. seriesId: 'xxx', seriesIndex: 0, seriesName: 'nnn', // 使用 edgeIndexs 来定位节点。 edgeIndexs: [3,4,5]&#125;) 相应的，增加一个方法，取消高亮指定的边，调用方法基本同上（需要改一下方法名哦）1234567891011myUnFocusEdge: function (seriesModel, ecModel, api, payload) &#123; var graph = this._model.getData().graph; var my_edge = payload.edgeIndexs;// 数组 my_edge.forEach(function(edge_item)&#123; var edgeDataIndex = edge_item; var edge = graph.getEdgeByIndex(edgeDataIndex); if (edge) &#123; fadeOutItem(edge, lineOpacityPath); &#125; &#125;)&#125; DEMOhtml提供一个容器1&lt;div id="chart" style="width:800px;height:800px"&gt;&lt;/div&gt; jslet myChart = echarts.init(document.getElementById('chart'))const option = &#123; title: &#123; text: '人民的名义关系图谱' &#125;, tooltip: &#123; formatter: function (x) &#123; return x.data.des; &#125; &#125;, series: [ &#123; type: 'graph', // 图的布局：可选： none circular(环形布局) force（力引导布局） layout: 'force', // 关系图节点标记的大小 symbolSize: 40, // 是否开启鼠标缩放和平移漫游 roam: true, // 边两端的标记类型 edgeSymbol: ['circle', 'arrow'], // 边两端的标记大小 edgeSymbolSize: [4, 10], // 力引导布局相关的配置项 force: &#123; // 节点之间的斥力因子，值越大，斥力越大。通俗来说，值越大，两个节点之间的距离越大，即关系边的长度越长 repulsion: 1000, // 边的两个节点之间的距离，以下设置：值最大的边长度会趋向于10，值最小的边长度会趋向于50 // edgeLength: [10, 50] &#125;, // 节点是否可拖拽 draggable: true, // 节点样式 itemStyle: &#123; normal: &#123; color: '#2f4554' &#125;, emphasis: &#123; borderColor: '#fff', borderWidth: 1, shadowBlur: 10, shadowColor: 'rgba(0, 0, 0, 0.8)' &#125; &#125;, // 关系边的公用线条样式 lineStyle: &#123; normal: &#123; textStyle: &#123; fontSize: 20 &#125;, width: 2, color: '#4b565b', // 边的曲度 curveness: 0.1 &#125; &#125;, // 边的标签样式 edgeLabel: &#123; normal: &#123; show: true, formatter: function (x) &#123; return x.data.name; &#125; &#125; &#125;, // 节点标签的样式 label: &#123; normal: &#123; show: true, textStyle: &#123; &#125; &#125; &#125;, data: [ &#123; name: '侯亮平', des: '最高检反贪局侦查处处长，汉东省人民检察院副检察长兼反贪局局长。&lt;br/&gt;经过与腐败违法分子的斗争，最终将一批腐败分子送上了审判台，&lt;br/&gt;正义战胜邪恶，自己也迎来了成长。', symbolSize: 80, itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '李达康', des: '汉东省省委常委，京州市市委书记。是一个正义无私的好官。&lt;br/&gt;但为人过于爱惜自己的羽毛，对待身边的亲人和朋友显得有些无情。', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '祁同伟', des: '汉东省公安厅厅长', symbolSize: 80 &#125;, name: '陈岩石', des: '离休干部、汉东省检察院前常务副检察长。充满正义，平凡而普通的共 产 党人。&lt;br/&gt;对大老虎赵立春，以各种形式执着举报了十二年。&lt;br/&gt;在这场关系党和国家生死存亡的斗争中，老人家以耄耋高龄，&lt;br/&gt;义无反顾地背起了炸 药包，在反腐胜利前夕因病去世。', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '陆亦可', des: '汉东省检察院反贪局一处处长', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '高育良', des: '汉东省省委副书记兼政法委书记。年近六十，是一个擅长太极功夫的官场老手。侯亮平、陈海和祁同伟是其学生。', symbolSize: 80 &#125;, &#123; name: '沙瑞金', des: '汉东省省委书记', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '高小琴', des: '山水集团董事长，是一位叱咤于政界和商界的风云人物，处事圆滑、精明干练。' &#125;, &#123; name: '高小凤' &#125;, &#123; name: '赵东来', des: '汉东省京州市公安局局长，充满正义，整治恶势力，&lt;br/&gt;在与检察部门的合作中从最初的质疑到之后的通力配合。', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '程度', des: '汉东省京州市公安局光明区分局局长，因犯错误，被李达康书记和赵东来局长点名要清除公安队伍。&lt;br/&gt;但在高小琴的帮助下，祁同伟调他当上了省公安厅办公室副主任。&lt;br/&gt;尽管程度逃避了所有罪责，上面也有人保他，&lt;br/&gt;但最终还是在反贪局局长侯亮平的缜密侦查下被绳之于法。', &#125;, &#123; name: '吴惠芬', des: '汉东省省委副书记高育良的妻子，汉东大学明史教授。', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '赵瑞龙', des: '副国级人物赵立春的公子哥，官二代，打着老子的旗子，&lt;br/&gt;黑白两道通吃，可谓呼风唤雨，权倾一时。', &#125;, &#123; name: '赵立春', des: '副国级领导人，曾经的改革闯将，在权利面前，显得极其渺小。', &#125;, &#123; name: '陈海', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '梁璐', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '刘新建' &#125;, &#123; name: '欧阳菁' &#125;, &#123; name: '吴心怡', itemStyle: &#123; normal: &#123; color: '#c23531' &#125; &#125; &#125;, &#123; name: '蔡成功' &#125;, &#123; name: '丁义珍' &#125; ], links: [ &#123; source: '高育良', target: '侯亮平', name: '师生', des: '侯亮平是高育良的得意门生' &#125;, &#123; source: '高育良', target: '祁同伟', name: '师生' &#125;, &#123; source: '赵立春', target: '高育良', name: "前领导" &#125;, &#123; source: '赵立春', target: '赵瑞龙', name: "父子" &#125;, &#123; source: '赵立春', target: '刘新建', name: "前部队下属" &#125;, &#123; source: '李达康', target: '赵立春', name: "前任秘书" &#125;, &#123; source: '祁同伟', target: '高小琴', name: "情人" &#125;, &#123; source: '陈岩石', target: '陈海', name: "父子" &#125;, &#123; source: '陆亦可', target: '陈海', name: "属下" &#125;, &#123; source: '沙瑞金', target: '陈岩石', name: "故人" &#125;, &#123; source: '祁同伟', target: '陈海', name: "师哥" &#125;, &#123; source: '祁同伟', target: '侯亮平', name: "师哥" &#125;, &#123; source: '侯亮平', target: '陈海', name: "同学，生死朋友" &#125;, &#123; source: '高育良', target: '吴惠芬', name: "夫妻" &#125;, &#123; source: '陈海', target: '赵东来', name: "朋友" &#125;, &#123; source: '高小琴', target: '高小凤', name: "双胞胎", symbolSize: '1' &#125;, &#123; source: '赵东来', target: '陆亦可', name: "爱慕" &#125;, &#123; source: '祁同伟', target: '程度', name: "领导" &#125;, &#123; source: '高育良', target: '高小凤', name: "情人" &#125;, &#123; source: '赵瑞龙', target: '祁同伟', name: "勾结", symbolSize: '1', &#125;, &#123; source: '李达康', target: '赵东来', name: "领导" &#125;, &#123; source: '赵瑞龙', target: '程度', name: "领导" &#125;, &#123; source: '沙瑞金', target: '李达康', name: "领导" &#125;, &#123; source: '沙瑞金', target: '高育良', name: "领导" &#125;, &#123; source: '祁同伟', target: '梁璐', name: "夫妻" &#125;, &#123; source: '吴惠芬', target: '梁璐', name: "朋友" &#125;, &#123; source: '李达康', target: '欧阳菁', name: "夫妻" &#125;, &#123; source: '赵瑞龙', target: '刘新建', name: "洗钱工具" &#125;, &#123; source: '赵瑞龙', target: '高小琴', name: "勾结，腐化", symbolSize: '1' &#125;, &#123; source: '赵瑞龙', target: '高小凤', name: "腐化" &#125;, &#123; source: '吴心怡', target: '陆亦可', name: "母女" &#125;, &#123; source: '吴心怡', target: '吴惠芬', name: "姐妹" &#125;, &#123; source: '蔡成功', target: '侯亮平', name: "发小" &#125;, &#123; source: '蔡成功', target: '欧阳菁', name: "举报", lineStyle: &#123; normal: &#123; type: 'dotted', color: '#000' &#125; &#125; &#125;, &#123; source: '欧阳菁', target: '刘新建', name: "举报", lineStyle: &#123; normal: &#123; type: 'dotted', color: '#000' &#125; &#125; &#125;, &#123; source: '刘新建', target: '赵瑞龙', name: "举报", lineStyle: &#123; normal: &#123; type: 'dotted', color: '#000' &#125; &#125; &#125;, &#123; source: '李达康', target: '丁义珍', name: "领导" &#125;, &#123; source: '高小琴', target: '丁义珍', name: "策划出逃" &#125;, &#123; source: '祁同伟', target: '丁义珍', name: "勾结" &#125;, &#123; source: '赵瑞龙', target: '丁义珍', name: "勾结" &#125;] &#125; ] &#125; myChart.setOption(option)]]></content>
      <tags>
        <tag>echarts</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[element-ui 前端分页实现]]></title>
    <url>%2F2018%2F11%2F07%2Felement-ui-%E5%89%8D%E7%AB%AF%E5%88%86%E9%A1%B5%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[一般情况下，获取表格数据时，我们会根据pageSize(每页数据量)和pageIndex(当前页数)进行查询，无论是pageSize还是pageIndex改变，我们都重新调接口获取数据，进行渲染。但是，有些情况下，数据一次性全部给到前端，前端需要对数据进行过滤并渲染。此次主要基于elment-ui的分页进行举例，分页的基本思想是一致的。 依赖element-uivue 代码html代码如下，有任何基础不明白可以看 element-ui中文网站12345678910111213141516171819202122232425&lt;div id="app"&gt; &lt;el-table :data="tableData" border style="width: 50%;" height="289"&gt; &lt;el-table-column prop="id" label="ID"&gt; &lt;/el-table-column&gt; &lt;el-table-column prop="name" label="用户名"&gt; &lt;/el-table-column&gt; &lt;/el-table&gt; &lt;el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage" :page-sizes="[5,10,15,20]" :page-size="pageSize" layout="total,sizes,prev,pager,next,jumper" :total="total"&gt; &lt;/el-pagination&gt;&lt;/div&gt; js主要针对pageSize和currentPage改变做数据过滤123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657new Vue(&#123; el: '#app', data () &#123; return &#123; // 当前页 currentPage: 1, // 每页数据量 pageSize: 5, // 数据总量 total: 60, // 原始数据 originData: [], // 渲染数据 tableData: [] &#125; &#125;, created () &#123; // 模拟数据 for(let i = 0; i &lt; 60; i++)&#123; this.originData.push(&#123; id: i, name: 'user'+i &#125;) &#125; &#125;, mounted () &#123; // 初始状态渲染 this.filterList(0,this.pageSize) &#125;, methods: &#123; // 改变每页条数 handleSizeChange (size) &#123; this.pageSize = size // 每次改变每页条数后，都设置当前页为第一页 this.currentPage = 1 this.filterList(0,this.pageSize) &#125;, // 改变当前页 handleCurrentChange (current) &#123; // 设置当前页为选择的页数，element不会自动设置 this.currentPage = current let start = (current - 1)* this.pageSize let end = current * this.pageSize this.filterList(start, end) &#125;, // 过滤数据，start为起始下标，end为结束下标，我们需要的数据是[start,end) filterList (start, end) &#123; // 每次重新渲染时，要把数组置空 this.tableData = [] for (;start &lt; end; start++)&#123; if(this.originData[start])&#123; this.tableData.push(this.originData[start]) &#125; &#125; &#125; &#125;&#125;) 效果图]]></content>
      <tags>
        <tag>element</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2018%2F10%2F17%2Ftest%2F</url>
    <content type="text"><![CDATA[开篇或结束引用 这是一篇测试文章1npm i lalala 这里面是代码块 标签插件添加样式 default warning success info danger内容warning内容success]]></content>
      <tags>
        <tag>哈哈</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F16%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>呵呵</tag>
      </tags>
  </entry>
</search>
